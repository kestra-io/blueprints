id: parse-twitter-json-payload
namespace: company.team
inputs:
  - id: json
    type: JSON
    defaults: |
      {
        "meta": {
          "oldest_id": "1197549579035496449",
          "newest_id": "1255542797765013504",
          "result_count": 100,
          "next_token": "7140k9",
          "previous_token": "77qp8"
        }
      }
tasks:
  - id: jq_filter
    type: io.kestra.plugin.core.log.Log
    message: |
      {{ inputs.json | jq('.meta | has("next_token")') | first }}
  - id: contains
    type: io.kestra.plugin.core.debug.Return
    format: |
      {{inputs.json["meta"] contains "next_token"}}
  - id: contains_if_else_operator
    type: io.kestra.plugin.core.debug.Return
    format: |
      {% if inputs.json["meta"] contains "next_token" %} true
        {% else %} false
      {% endif %}
  - id: is_not_null_operator
    type: io.kestra.plugin.core.debug.Return
    format: |
      {% if inputs.json["meta"]["next_token"] is not null %}
          true
      {% endif %}
extend:
  title: Check if a given key exists in a JSON REST API payload
  description: >-
    Its common to receive a payload from a REST API and check if a given key
    exists in a JSON payload. This flow demonstrates multiple ways of
    accomplishing that â€” a JQuery filter, a `contains` operator, and an `is not
    null` operator.


    Check the [Expressions](https://kestra.io/docs/concepts/expression)
    documentation for more examples.
  tags:
    - Inputs
    - API
  ee: false
  demo: true
  meta_description: This flow demonstrates how to use Kestra's Pebble expressions
    to parse JSON elements and check if a given key exists in the API payload.

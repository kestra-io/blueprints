id: parallelSubflows
namespace: company.team
tasks:
  - id: parallel
    type: io.kestra.plugin.core.flow.Parallel
    tasks:
      - id: flow1
        type: io.kestra.plugin.core.flow.Subflow
        flowId: flow1
        namespace: company.team
      - id: flow2
        type: io.kestra.plugin.core.flow.Subflow
        flowId: flow2
        namespace: company.team
      - id: flow3
        type: io.kestra.plugin.core.flow.Subflow
        flowId: flow3
        namespace: company.team
pluginDefaults:
  - type: io.kestra.plugin.core.flow.Flow
    values:
      namespace: company.team
      wait: true
      transmitFailed: true
extend:
  title: Run multiple subflows in parallel and wait for their completion - use
    taskDefaults to avoid boilerplate code
  description: >-
    Add the child flows first: 


    First flow:    

    ```yaml

    id: flow1

    namespace: company.team

    tasks:

    - id: get
      type: io.kestra.plugin.core.debug.Return
      format: hi from {{ flow.id }}
    ```


    Second flow:

    ```yaml

    id: flow2

    namespace: company.team

    tasks:

    - id: get
      type: io.kestra.plugin.core.debug.Return
      format: hi from {{ flow.id }}
    ```


    Third flow:

    ```yaml

    id: flow3

    namespace: company.team

    tasks:

    - id: get
      type: io.kestra.plugin.core.debug.Return
      format: hi from {{ flow.id }}
    ```
      
    Then run the parent flow `parallelSubflows` to trigger multiple subflows in
    parallel.
  tags:
    - Parallel
  ee: false
  demo: true
  meta_description: This flow run multiple subflows in parallel and wait for their completion.

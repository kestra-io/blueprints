id: general-chaos-test
namespace: company.team

inputs:
  - id: docker_hub_username
    type: STRING
    required: true
    description: "Docker Hub username"

  - id: docker_hub_password
    type: STRING
    required: true
    description: "Docker Hub password"

  - id: chaos_type
    type: STRING
    required: true
    description: "Type of chaos to inject (cpu-stress, memory-stress, network-latency, network-loss, pod-kill)"
  - id: chaos_mode
    type: STRING
    required: true
    description: "Chaos mode (one, all, fixed, fixed-percent, random-max-percent)"
  - id: chaos_mode_value
    type: STRING
    required: false
    description: "Value for chaos mode when using fixed or percentage modes"
    defaults: "1"
  - id: tests_duration
    type: STRING
    required: true
    description: "Duration for chaos experiment"
  - id: cpu_workers
    type: INT
    required: true
    description: "Number of CPU workers for stress test"
  - id: cpu_load
    type: INT
    required: true
    description: "CPU load percentage for stress test"
  - id: memory_workers
    type: INT
    required: true
    description: "Number of memory workers for stress test"
  - id: memory_size
    type: STRING
    required: true
    description: "Memory size for stress test"
  - id: network_latency_ms
    type: STRING
    required: true
    description: "Network latency for delay test"
  - id: network_jitter
    type: STRING
    required: true
    description: "Network jitter for delay test"
  - id: network_loss_percent
    type: STRING
    required: true
    description: "Network loss percentage"
  - id: correlation
    type: STRING
    required: true
    description: "Correlation percentage for network chaos"
  - id: app_url
    type: STRING
    required: false
    description: "Application URL for load testing"

  - id: artillery_arrival_rate
    type: INT
    required: false
    description: "Artillery arrival rate (requests per second)"
    defaults: 10

tasks:
  - id: validate_chaos_type
    type: io.kestra.plugin.core.flow.Switch
    value: "{{ inputs.chaos_type }}"
    cases:
      cpu_stress:
        - id: inject_cpu_stress
          type: io.kestra.plugin.kubernetes.kubectl.Apply
          namespace: default
          spec: |-
            apiVersion: chaos-mesh.org/v1alpha1
            kind: StressChaos
            metadata:
              name: "cpu-stress-test"
              namespace: default
            spec:
              mode: "{{ inputs.chaos_mode }}"
              selector:
                namespaces:
                  - default
                labelSelectors:
                  "app": "sample-microservice"
              duration: "{{ inputs.tests_duration }}s"
              stressors:
                cpu:
                  workers: {{ inputs.cpu_workers }}
                  load: {{ inputs.cpu_load }}

        - id: wait_for_chaos_cpu
          type: io.kestra.plugin.core.flow.Sleep
          duration: "PT5S"

        - id: run_artillery_test_cpu
          type: io.kestra.plugin.docker.Run
          containerImage: swymbnsl/artillery-runner:slim
          inputFiles:
            artillery-config.yml: |
              config:
                target: "{{ inputs.app_url }}"
                phases:
                  - duration: {{ inputs.tests_duration }}
                    arrivalRate: {{ inputs.artillery_arrival_rate }}
                plugins:
                  metrics-by-endpoint: {}
              scenarios:
                - flow:
                    - get:
                        url: "/"
          credentials:
            username: "{{ inputs.docker_hub_username }}"
            password: "{{ inputs.docker_hub_password }}"
          commands:
            - artillery
            - run
            - artillery-config.yml
            - --output
            - test-results.json
          outputFiles:
            - test-results.json

      memory_stress:
        - id: inject_memory_stress
          type: io.kestra.plugin.kubernetes.kubectl.Apply
          namespace: default
          spec: |-
            apiVersion: chaos-mesh.org/v1alpha1
            kind: StressChaos
            metadata:
              name: "memory-stress-test"
              namespace: default
            spec:
              mode: "{{ inputs.chaos_mode }}"
              selector:
                namespaces:
                  - default
                labelSelectors:
                  "app": "sample-microservice"
              duration: "{{ inputs.tests_duration }}s"
              stressors:
                memory:
                  workers: {{ inputs.memory_workers }}
                  size: "{{ inputs.memory_size }}"

        - id: wait_for_chaos_memory
          type: io.kestra.plugin.core.flow.Sleep
          duration: "PT5S"

        - id: run_artillery_test_memory
          type: io.kestra.plugin.docker.Run
          containerImage: swymbnsl/artillery-runner:slim
          inputFiles:
            artillery-config.yml: |
              config:
                target: "{{ inputs.app_url }}"
                phases:
                  - duration: {{ inputs.tests_duration }}
                    arrivalRate: {{ inputs.artillery_arrival_rate }}
                plugins:
                  metrics-by-endpoint: {}
              scenarios:
                - flow:
                    - get:
                        url: "/"
          credentials:
            username: "{{ inputs.docker_hub_username }}"
            password: "{{ inputs.docker_hub_password }}"
          commands:
            - artillery
            - run
            - artillery-config.yml
            - --output
            - test-results.json
          outputFiles:
            - test-results.json

      network_latency:
        - id: inject_network_latency
          type: io.kestra.plugin.kubernetes.kubectl.Apply
          namespace: default
          spec: |-
            apiVersion: chaos-mesh.org/v1alpha1
            kind: NetworkChaos
            metadata:
              name: network-latency-test
              namespace: default
            spec:
              action: delay
              mode: "{{ inputs.chaos_mode }}"
              value: "{{ inputs.chaos_mode_value }}"
              selector:
                namespaces:
                  - default
                labelSelectors:
                  "app": "sample-microservice"
              delay:
                latency: "{{ inputs.network_latency_ms }}ms"
                correlation: "{{ inputs.correlation }}"
                jitter: "{{ inputs.network_jitter }}"
              duration: "{{ inputs.tests_duration }}s"
              direction: to

        - id: wait_for_chaos_network_latency
          type: io.kestra.plugin.core.flow.Sleep
          duration: "PT5S"

        - id: run_artillery_test_network_latency
          type: io.kestra.plugin.docker.Run
          containerImage: swymbnsl/artillery-runner:slim
          inputFiles:
            artillery-config.yml: |
              config:
                target: "{{ inputs.app_url }}"
                phases:
                  - duration: {{ inputs.tests_duration }}
                    arrivalRate: {{ inputs.artillery_arrival_rate }}
                plugins:
                  metrics-by-endpoint: {}
              scenarios:
                - flow:
                    - get:
                        url: "/"
          credentials:
            username: "{{ inputs.docker_hub_username }}"
            password: "{{ inputs.docker_hub_password }}"
          commands:
            - artillery
            - run
            - artillery-config.yml
            - --output
            - test-results.json
          outputFiles:
            - test-results.json

      network_loss:
        - id: inject_network_loss
          type: io.kestra.plugin.kubernetes.kubectl.Apply
          namespace: default
          spec: |-
            apiVersion: chaos-mesh.org/v1alpha1
            kind: NetworkChaos
            metadata:
              name: network-loss-test
              namespace: default
            spec:
              action: loss
              mode: "{{ inputs.chaos_mode }}"
              value: "{{ inputs.chaos_mode_value }}"
              selector:
                namespaces:
                  - default
                labelSelectors:
                  "app": "sample-microservice"
              loss:
                loss: "{{ inputs.network_loss_percent }}"
                correlation: "{{ inputs.correlation }}"
              duration: "{{ inputs.tests_duration }}s"
              direction: to

        - id: wait_for_chaos_network_loss
          type: io.kestra.plugin.core.flow.Sleep
          duration: "PT5S"

        - id: run_artillery_test_network_loss
          type: io.kestra.plugin.docker.Run
          containerImage: swymbnsl/artillery-runner:slim
          inputFiles:
            artillery-config.yml: |
              config:
                target: "{{ inputs.app_url }}"
                phases:
                  - duration: {{ inputs.tests_duration }}
                    arrivalRate: {{ inputs.artillery_arrival_rate }}
                plugins:
                  metrics-by-endpoint: {}
              scenarios:
                - flow:
                    - get:
                        url: "/"
          credentials:
            username: "{{ inputs.docker_hub_username }}"
            password: "{{ inputs.docker_hub_password }}"
          commands:
            - artillery
            - run
            - artillery-config.yml
            - --output
            - test-results.json
          outputFiles:
            - test-results.json

      pod_kill:
        - id: inject_pod_chaos
          type: io.kestra.plugin.kubernetes.kubectl.Apply
          namespace: default
          spec: |-
            apiVersion: chaos-mesh.org/v1alpha1
            kind: PodChaos
            metadata:
              name: pod-kill-test
              namespace: default
            spec:
              action: pod-kill
              mode: "{{ inputs.chaos_mode }}"
              value: "{{ inputs.chaos_mode_value }}"
              selector:
                namespaces:
                  - default
                labelSelectors:
                  "app": "sample-microservice"
              duration: "{{ inputs.tests_duration }}s"

        - id: wait_for_chaos_pod_kill
          type: io.kestra.plugin.core.flow.Sleep
          duration: "PT5S"

        - id: run_artillery_test_pod_kill
          type: io.kestra.plugin.docker.Run
          containerImage: swymbnsl/artillery-runner:slim
          inputFiles:
            artillery-config.yml: |
              config:
                target: "{{ inputs.app_url }}"
                phases:
                  - duration: {{ inputs.tests_duration }}
                    arrivalRate: {{ inputs.artillery_arrival_rate }}
                plugins:
                  metrics-by-endpoint: {}
              scenarios:
                - flow:
                    - get:
                        url: "/"
          credentials:
            username: "{{ inputs.docker_hub_username }}"
            password: "{{ inputs.docker_hub_password }}"
          commands:
            - artillery
            - run
            - artillery-config.yml
            - --output
            - test-results.json
          outputFiles:
            - test-results.json

    defaults:
      - id: shell_script_task
        type: io.kestra.plugin.scripts.shell.Script
        script: |
          echo "Invalid chaos type: {{ inputs.chaos_type }}"
          echo "Valid types: cpu-stress, memory-stress, network-latency, network-loss, pod-kill"
          exit 1

  - id: sleep
    type: io.kestra.plugin.core.flow.Sleep
    duration: "PT{{ inputs.tests_duration }}S"

outputs:
  - id: chaos_test_result
    type: FILE
    value: "{{ outputs['run_artillery_test_' + inputs.chaos_type]['outputFiles']['test-results.json'] }}"
  - id: chaos_type_tested
    type: STRING
    value: "{{ inputs.chaos_type }}"

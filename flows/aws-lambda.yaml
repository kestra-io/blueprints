id: aws-lambda
namespace: company.team

tasks:
  - id: sls_commands
    type: io.kestra.plugin.scripts.node.Commands
    runner: PROCESS
    docker:
      image: node:18
    warningOnStdErr: false
    inputFiles:
      serverless.yml: |
        service: lambda
        frameworkVersion: '3'

        provider:
          name: aws
          runtime: python3.9
          region: eu-central-1
          memorySize: 512
          timeout: 10

        functions:
          etl:
            handler: handler.run

      handler.py: |
        import platform
        import sys

        def extract() -> int:
            print("Extracting data...")
            return 21

        def transform(x: int) -> int:
            print("Transforming data...")
            return x * 2

        def load(x: int) -> None:
            print(f"Loading {x} into destination...")

        def run(event=None, context=None):
            raw_data = extract()
            transformed = transform(raw_data)
            load(transformed)
            print("Hello from Kestra ðŸš€")
            print(f"Host's network name = {platform.node()}")
            print(f"Python version = {platform.python_version()}")
            print(f"Platform information (instance type) = {platform.platform()}")
            print(f"OS/Arch = {sys.platform}/{platform.machine()}")
    commands:
      - npm install -g serverless
      - sls deploy
      - sls invoke -f etl --log
      # - sls remove

extend:
  title: "Serverless AWS Lambda Blueprint"
  description: |
    This blueprint demonstrates how to use Serverless Framework to deploy an
    AWS Lambda function. It includes:

    - A minimal `serverless.yml` configuration file
    - A sample `handler.py` Python file with `extract`, `transform`, and `load`
    functions
    - Commands to install Serverless, deploy the service, and invoke the function

    The blueprint is designed to run in Docker using the `node:18` image. It sets
    up the necessary environment to use Serverless Framework and AWS Lambda
    seamlessly.

    To use this blueprint:

    1. Ensure you have the necessary AWS permissions and your credentials are
    configured.
    2. Adjust the `serverless.yml` and `handler.py` files as needed for your
    application.
    3. Run the blueprint to deploy your Lambda function.
  tags:
    - AWS
    - Serverless
  ee: false
  demo: false
  meta_description: This blueprint demonstrates how to use Serverless Framework
    to deploy an AWS Lambda function. It includes a minimal `serverless.yml`
    configuration file, a sample `handler.py` Python file, and commands to
    install Serverless, deploy the service, and invoke the function.

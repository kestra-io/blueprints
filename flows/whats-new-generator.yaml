id: whats-new-generator
namespace: system # Can be any namespace according to your project structure
description: |
  This Kestra flow automates the generation of a `What's New` section in your open source project's documentation by:

  - Fetching new commits made to the `main` branch each day
  - Summarizing the commit log using OpenAI
  - Updating and pushing the summary to `docs/whats-new.md` on the same branch
  
  Why This Flow?
  Maintainers often forget or delay updating documentation with recent changes. 
  This leads to outdated docs and confusion for new users and contributors. With this flow:
  
  Pros : 
  - Docs are kept fresh automatically
  - Non-developers can track progress via human-readable summaries
  - Contributors feel recognized as their changes are reflected daily

  What It Does

  1. **Clones the main repo**
  2. **Fetches commits from the past day**
  3. **Feeds commit log to OpenAI to generate a natural language summary**
  4. **Updates `docs/whats-new.md`** 
  5. **Commits and pushes the new content**

  Set the following in Kestraâ€™s Secrets UI:

  - `GITHUB_TOKEN`: GitHub token with write access
  - `OPENAI_API_KEY`: OpenAI API key (GPT-4 is recommended)

  Make sure to replace `UserName`, `RepositoryName`, and `YourGithubUsername` with your actual GitHub username and repository name.
  Also, ensure the `docs/whats-new.md` file exists in your repository.
  This flow runs daily at 9 AM UTC, but you can adjust the cron schedule as needed.

triggers:
  - id: daily-trigger
    type: io.kestra.plugin.core.trigger.Schedule
    cron: "0 9 * * *"  # Runs daily at 9 AM UTC, just change this to your preferred time

tasks:
  - id: working-directory
    type: io.kestra.plugin.core.flow.WorkingDirectory
    outputFiles:
      - "commits.txt"
      - "summary.txt"
    tasks:
      - id: clone-repo
        type: io.kestra.plugin.git.Clone
        url: https://github.com/UserName/RepositoryName # Replace with your UserName and RepositoryName
        branch: main
        username: YourGithubUsername # Your Github Username
        password: "{{ secret('GITHUB_TOKEN') }}" # Github Personal Access Token

      - id: fetch-yesterday-log
        type: io.kestra.plugin.scripts.shell.Commands
        taskRunner:
          type: io.kestra.plugin.core.runner.Process
        commands:
          - git fetch origin main
          - YESTERDAY=$(date -d "yesterday" +"%Y-%m-%d")
          - TODAY=$(date +"%Y-%m-%d")
          - echo "Fetching commits from $YESTERDAY to $TODAY"
          - touch commits.txt
          - git log --since="$YESTERDAY" --until="$TODAY" --pretty=format:"%h %s" > commits.txt
          - echo "Commits saved to commits.txt"

      - id: summarize-with-llm
        type: io.kestra.plugin.openai.ChatCompletion
        apiKey: "{{ secret('OPENAI_API_KEY') }}" # OpenAi secret key : get it from (https://platform.openai.com/api-keys) 
        model: gpt-4-0125-preview # Choose model according to your preference
        temperature: 0.5
        messages:
          - role: system
            content: "You are a technical writer creating release notes. Summarize git commits into clear, user-friendly release notes."
          - role: user
            content: |
              Summarize the following git commits into a clear and concise "What's New" release note for users:

              {{ read(outputs['working-directory'].outputFiles['commits.txt']) }}

      - id: save-summary
        type: io.kestra.plugin.scripts.shell.Commands
        taskRunner:
          type: io.kestra.plugin.core.runner.Process
        commands:
          - echo "{{ outputs['summarize-with-llm'].choices[0].message.content }}" > summary.txt

      - id: update-docs-and-push
        type: io.kestra.plugin.scripts.shell.Commands
        taskRunner:
          type: io.kestra.plugin.core.runner.Process
        commands:
          - cd docs # This needs to be your repository's path
          - echo -e "\n### $(date +"%Y-%m-%d")" >> whats-new.md
          - cat ../summary.txt >> whats-new.md
          - echo "" >> whats-new.md
          - cd ..
          - git config user.email "bot@yourorg.com"
          - git config user.name "AutoDocs Bot"
          - git add ./docs/whats-new.md
          - "git commit -m \\\"docs: update What's New section for $(date +\\\"%Y-%m-%d\\\")\\\""
          - git remote set-url origin https://YourUsername:{{ secret('GITHUB_TOKEN') }}@github.com/YourUsername/Repository.git
          - git push origin main
